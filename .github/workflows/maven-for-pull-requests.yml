name: Java build (for PR)
# This build is the same as the one for branches but skips Sonar since secrets are not available in PRs
# due to potential security issues

on:
  pull_request:
    branches: [ master ]

jobs:
  build8:
    name: Build on JDK 8

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: maven-settings
      uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: |
          [{
              "id": "github-the4thlaw",
              "username": "The4thLaw",
              "password": "${{ secrets.GITHUB_TOKEN }}"
          }]
        githubServer: false
    - name: Build with Maven
      run: mvn -B clean verify -DCI=true
      working-directory: ./source

  build17:
    name: Build on JDK 17
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones are disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: maven-settings
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
                "id": "github-the4thlaw",
                "username": "The4thLaw",
                "password": "${{ secrets.GITHUB_TOKEN }}"
            }]
          githubServer: false
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn -B clean verify -DCI=true -Pvue,coverage,dev
        working-directory: ./source
