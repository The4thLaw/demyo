<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
           http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:component-scan base-package="org.demyo" />
	<import resource="classpath:org/demyo/dao/demyo-dao-context.xml" />
	<tx:annotation-driven/>
	<mvc:annotation-driven />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<!--
		TODO: gzip the resources uzing the GzipResourceResolver
		(maybe use a mvn plugin to zip them all automatically?)
		See:
			http://www.baeldung.com/spring-mvc-static-resources
			https://github.com/spring-projects/spring-framework/blob/master/spring-webmvc/src/test/resources/org/springframework/web/servlet/config/mvc-config-resources-chain-no-auto.xml
	-->
	
	<!--
	Cache management
	We can rely on a pure memory implementation for now, without advanced features:
	 - It's very fast
	 - It's easy to set up
	 - We don't really need persistence between application executions. At least not with the current use cases.
	-->
	<cache:annotation-driven />
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<!-- This cache is used to store lists of model (e.g. results of findAll).
				It can be very useful in constrained environments like a Raspberry Pi, when the Album edit page
				fetches large amounts of mostly static data -->
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="ModelLists"/>
			</set>
		</property>
	</bean>
	
	<jee:jndi-lookup id="desktopCallbacks" jndi-name="org.demyo.services.desktop" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>org/demyo/i18n/core</value>
				<value>org/demyo/i18n/desktop</value>
				<value>org/demyo/i18n/fields</value>
				<value>org/demyo/i18n/menu</value>
				<value>org/demyo/i18n/pages</value>
				<value>org/demyo/i18n/javascript</value>
				<value>org/demyo/i18n/special</value>
				<value>org/demyo/i18n/widgets</value>
			</list>
		</property>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>/WEB-INF/velocity/</value>
		</property>
		<property name="velocityProperties">
			<props>
				<!--Doesn't work with Spring's macros... -->
				<prop key="runtime.references.strict">true</prop>

				<prop key="velocimacro.arguments.strict">true</prop>
				<prop key="velocimacro.library">macros/common.vm,macros/forms.vm,macros/form-values.vm,macros/i18n.vm,macros/images.vm,macros/lists.vm</prop>
			</props>
		</property>
	</bean>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="suffix" value=".vm" />
		<property name="layoutUrl" value="layout/default.vm" />
		<property name="contentType" value="text/html; charset=UTF-8"></property>
		<property name="viewClass"
			value="org.demyo.web.velocity.view.Velocity2ToolboxView" />
		<property name="toolboxConfigLocation" value="WEB-INF/velocity/velocity-tools.xml" />
		<!--<property name="exposeSpringMacroHelpers" value="true" />-->
		<!--<property name="exposeRequestAttributes" value="true" />-->
		<!--<property name="exposeSessionAttributes" value="true" />-->
	</bean>
</beans>
