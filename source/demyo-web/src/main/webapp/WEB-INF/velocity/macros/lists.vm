#macro(textList $entityList $sortProperty $displayProperty $baseUrl $splitByFirstLetter)
	#set ($first = true)
	#set ($lastFirstLetter = '/')
	<div class="text-list">
	#if (!$splitByFirstLetter)
		<ul>
	#end
	#foreach ($entity in $entityList)
		## A bit hacky, but we need this kind of flexibility
		#set ($temp = $context.this.put("entity", $entity))
		
		#if ($splitByFirstLetter)
			#set ($firstLetter = $paging.getFirstLetter($render.eval($context.this, "\$entity.$sortProperty")))
		
			#if ($firstLetter != $lastFirstLetter)
				#if (!$first)
					</ul>
				#else
					#set ($first = false)
				#end
				
				<ul title="$firstLetter">
				
				#set ($lastFirstLetter = $firstLetter)
			#end
		#end
		
		<li><a href="$baseUrl$entity.id">$render.eval($context.this, "\$entity.$displayProperty")</a></li>
	#end
	
	#if (${entityList.class.name} == "org.springframework.data.domain.PageImpl"
			|| ${entityList.class.name} == "org.springframework.data.domain.SliceImpl")
		#if (!$entityList.hasContent())
			</ul>
		#end
	#else
		## TODO: eventually, this will disappear
		#if (!$entityList.empty)
			</ul>
		#end
	#end
	</div>
#end

#macro(csvList $entityList $baseUrl)
	#foreach ($entity in $entityList)
		<a href="$link.contextPath$baseUrl$entity.id">$entity.identifyingName</a>#if( $foreach.hasNext ), #end
	#end
#end

#macro(tagList $tags)
	#foreach ($tag in $tags)
		#tag($tag)
	#end
#end

#macro(textCardListStdBody $entityList $sortProperty $displayProperty $baseUrl $splitByFirstLetter)
	#set ($lastFirstLetter = '/')
	<div class="dem-card-list">
	#foreach ($entity in $entityList)
		## A bit hacky, but we need this kind of flexibility
		#set ($temp = $context.this.put("entity", $entity))
		
		#if ($splitByFirstLetter)
			#set ($firstLetter = $paging.getFirstLetter($render.eval($context.this, "\$entity.$sortProperty")))
			
			#if ($firstLetter != $lastFirstLetter)
				</div>
				<div class="dem-card-list__separator">$firstLetter</div>
				<div class="dem-card-list">
				#set ($lastFirstLetter = $firstLetter)
			#end
		#end
		
		<div class="mdl-card mdl-shadow--2dp dem-model-card">
			<a class="dem-model-card__title" href="$link.contextPath$baseUrl$entity.id">$render.eval($context.this, "\$entity.$displayProperty")</a>
		</div>
	#end
	</div>
#end

#macro(textCardListCustomBody $entityList $sortProperty $splitByFirstLetter)
	#cardListCustomBody($entityList $sortProperty $splitByFirstLetter "dem-card-list--text")
#end

#macro(thumbCardListCustomBody $entityList $sortProperty $splitByFirstLetter)
	#cardListCustomBody($entityList $sortProperty $splitByFirstLetter "dem-card-list--thumbs")
#end

#macro(cardListCustomBody $entityList $sortProperty $splitByFirstLetter $class)
	#set ($lastFirstLetter = '/')
	<div class="dem-card-list $class">
	#foreach ($entity in $entityList)
		## A bit hacky, but we need this kind of flexibility
		#set ($temp = $context.this.put("entity", $entity))
		
		#if ($splitByFirstLetter)
			#set ($firstLetter = $paging.getFirstLetter($render.eval($context.this, "\$entity.$sortProperty")))
			
			#if ($firstLetter != $lastFirstLetter)
				</div>
				<div class="dem-card-list__separator">$firstLetter</div>
				<div class="dem-card-list">
				#set ($lastFirstLetter = $firstLetter)
			#end
		#end
		
		$bodyContent
	#end
	</div>
#end

## This is a special index since we need to group everything by series
#macro(textCardListAlbums $albumList $splitByFirstLetter)
	#set ($lastSeries = -1)
	#set ($inSeries = false)
	#set ($lastFirstLetter = '/')
	<div class="dem-card-list">
	#foreach ($album in $albumList)
	
		## Split by first letter
		#if ($splitByFirstLetter)
			#if (!$album.series)
				#set ($firstLetter = $paging.getFirstLetter($album.title))
			#else
				#set ($firstLetter = $paging.getFirstLetter($album.series.name))
			#end
					
			#if ($firstLetter != $lastFirstLetter)
				## If in a series, close if
				#if ($inSeries)
					## Close pending series
					#set ($inSeries = false)
						</ul>
					</div>
				#end
				
				## Close general list and start a new one
				</div>
				<div class="dem-card-list__separator">$firstLetter</div>
				<div class="dem-card-list">
				#set ($lastFirstLetter = $firstLetter)
			#end
		#end
	
		## Show actual data
		#if (!$album.series)
			## Single albums
			
			#if ($inSeries)
				## Close pending series
				#set ($inSeries = false)
					</ul>
				</div>
			#end
			#set ($lastSeries = -1)
		
			<div class="mdl-card mdl-shadow--2dp dem-model-card">
				<a class="dem-model-card__title" href="$link.contextPath/albums/view/$album.id">$album.title</a>
			</div>
		#else
			## Albums in a series
			
			#if ($inSeries && $lastSeries != $album.series.id)
				## Close the previous series
					</ul>
				</div>
				#set ($inSeries = false)
			#end
			#if (!$inSeries)
				## Open a new series
				<div class="mdl-card mdl-shadow--2dp dem-model-card dem-model-card--with-dependencies">
					<a class="dem-model-card__title" href="$link.contextPath/series/view/$album.series.id">$album.series.identifyingName</a>
					<ul class="dem-model-card__dependencies">
			#end
			#set ($lastSeries = $album.series.id)
			#set ($inSeries = true)
			
			## When https://github.com/google/material-design-lite/issues/1096 is solved, perhaps we could add ripples here
			<li><a href="$link.contextPath/albums/view/$album.id">$album.title</a></li>
		#end
	
	#end
	</div>
	
	#if ($inSeries)
		## Close any pending series
		</div>
	#end
#end
