<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<context:component-scan base-package="org.demyo" />
	<!-- Deferred is needed in order to be able to use the Hibernate SessionFactory -->
	<jpa:repositories base-package="org.demyo.dao" bootstrap-mode="deferred" />

	<!-- Detect @PersistenceUnit / @PersistenceContext annotations -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<jee:jndi-lookup id="dataSource" jndi-name="org.demyo.services.dataSource" />
	
	<bean id="flywayConfig" class="org.flywaydb.core.api.configuration.ClassicConfiguration">
		<!-- Old Demyo databases may have schema_version, but that is no longer the default since Flyway 5 -->
		<property name="table" value="schema_version"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="locations">
			<array>
				<value>org/demyo/model/schema</value>
			</array>
		</property>
	</bean>
	<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate" />
	
	<!-- Must be run after Flyway to ensure the database is compatible with the code -->
	<!-- Spring data needs this bean to be named entityManagerFactory, even though it's a SessionFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" depends-on="flyway">

		<!-- Entity packages -->
		<property name="packagesToScan">
			<list>
				<value>org.demyo.model</value>
				<value>org.demyo.model.*</value>
				<value>org.demyo.model.**.*</value>
			</list>
		</property>

		<!-- Datasource definition -->
		<property name="dataSource" ref="dataSource" />

		<!-- JPA/Hibernate Configuration -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">${config.hibernate.debug}</prop>
				<prop key="hibernate.format_sql">${config.hibernate.debug}</prop>
				<!-- If enabled, Hibernate will collect statistics useful for performance tuning. -->
				<prop key="generate_statistics">false</prop>
				<!-- If turned on, Hibernate will generate comments inside the SQL, for easier debugging. -->
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<!--
				<entry key="hibernate.cache.use_query_cache" value="true" />
				<entry key="hibernate.cache.use_second_level_cache" value="true" />
				<entry key="hibernate.cache.region.factory_class" value="net.sf.ehcache.hibernate.EhCacheRegionFactory" />
				-->
			</props>
		</property>
	</bean>

	<!--
	Transaction Manager
	
	org.springframework.orm.jpa.JpaTransactionManager would also work but using the Hibernate-specific one
	allows some specific behaviour:
	https://github.com/spring-projects/spring-framework/issues/13599#issuecomment-453364266
	-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Exception translation bean post processor -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
</beans>
